<project name="SIF3DMGenerator" basedir="." default="00-env">

	<property name="project.basedir" value="${basedir}"/>

	<!-- *************************** -->
	<!-- Load default property files -->
	<!-- *************************** -->
	<property file="${project.basedir}/ant.properties"/>

	<!-- ********************* -->
	<!-- Environment Variables -->
	<!-- ********************* -->
	<property name="generator.dir" value="${project.basedir}/Generator"/>
	<property name="output.base.dir" value="${generator.dir}/data/output"/>
	<property name="input.base.dir" value="${generator.dir}/data/input"/>
	<property name="lib.root.dir" value="${project.basedir}/lib"/>
	<property name="jaxb.lib.root.dir" value="${lib.root.dir}/jaxblib" />
	<property name="build.dir" value="${project.basedir}/build"/>
	<property name="class.dir" value="${build.dir}/classes" />
	<property name="dist.dir" value="${build.dir}/dist" />
	<property name="sifau.dd.file.name" value="SIF_Message.xsd"/>
	<property name="sifunity.dd.file.name" value="SIF_Message.xsd"/>
	
	<property name="verbose" value="true" />

	<taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask">
		<classpath>
			<fileset dir="${jaxb.lib.root.dir}" includes="*.jar" />
		</classpath>
	</taskdef>

	<path id="classpath">
		<fileset dir="${lib.root.dir}">
			<include name="**/*.jar" />
			<include name="**/*.zip" />
		</fileset>
		<pathelement path="${class.dir}" />
	</path>

	<!-- print some varaibles -->
	<target name="00-env" description="Show Ant variables">
		<echo message="Java/JVM version: ${ant.java.version}"/> 
		<echo message="Java/JVM detail version: ${java.version}"/> 
		<echo message="project.basedir: ${project.basedir}"/>
		<echo message="generator.dir: ${generator.dir}"/>
		<echo message="output.base.dir: ${output.base.dir}"/>
		<echo message="input.base.dir: ${input.base.dir}"/>
		<echo message="lib.root.dir: ${lib.root.dir}"/>
		<echo message="jaxb.lib.root.dir: ${jaxb.lib.root.dir}"/>
		<echo message="build.dir: ${build.dir}"/>
		<echo message="class.dir: ${class.dir}"/>
		<echo message="dist.dir: ${dist.dir}"/>
		<echo message="sif.local: ${sif.local}"/>
		<echo message="sif.dm.version: ${sif.dm.version}"/>
		<echo message="sif.dm.version.nodot: ${sif.dm.version.nodot}"/>
	</target>

	<!-- Clean environment. -->
	<target name="02-clean" description="Deletes the build directory">
		<delete dir="${class.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${output.base.dir}" />
	</target>

	<!-- ***************** -->
	<!-- Environment setup -->
	<!-- ***************** -->
	<target name="init">
		<mkdir dir="${class.dir}"/>
		<mkdir dir="${dist.dir}"/>
		<mkdir dir="${output.base.dir}"/>
	</target>

	<!-- ************************************************* -->
	<!-- Generate Data Dictionary Java Classes from XSD(s) -->
	<!-- ************************************************* -->
	<!--	
		NOTE:
		The Generation targets only create the classes in the 'Generator/data/output' directory. They will not be copied to the
		actual source directories that can be found under 'sif3Datamodel/src'. This is done on purpose for the time being to avoid
		potential overrides of classes in the source directories. It is up to the developer to manually copy the generated classes
		from the 'Generator/data/output' to the appropriate 'sif3Datamodel/src' directory before the compile and jar tasks are 
		called for the final jar file.
	-->

    <!-- ********************* -->
    <!-- AU Data Model Section -->
    <!-- ********************* -->
	<target name="10-generate-AU-DM" depends="init" description="Generate POJOs using JAXB for SIF AU">
		<antcall target="generate-au-pojo">
			<param name="sifddversion" value="${sif.dm.version}"/>
		</antcall>
	</target>
	
	<target name="generate-au-pojo" depends="init" description="Generate POJOs using JAXB">
		<echo message="Generate Pojos for Locale AU, Data Model Version ${sifddversion} and Infrastructure 3.x"/>
		<delete dir="${output.base.dir}/sifau${sifddversion}/src" />
		<mkdir dir="${output.base.dir}/sifau${sifddversion}/src"/>
		<mkdir dir="${input.base.dir}/XSD/sifau30/temp"/>
		<copy file="${input.base.dir}/XSD/sifau30/au${sifddversion}/${sifau.dd.file.name}" tofile="${input.base.dir}/XSD/sifau30/temp/${sifau.dd.file.name}"/>
		<xjc destdir="${output.base.dir}/sifau${sifddversion}/src" 
             package="sif.dd.au30.model" 
             extension="true" 
             header="false" 
             source="2.0">
			<schema  dir="${input.base.dir}/XSD/sifau30/temp" includes="*.xsd"/>
			<binding dir="${generator.dir}/config" includes="auCustom.xjb"/>
			<arg value="-npa"/>
		</xjc>
		<delete dir="${input.base.dir}/XSD/sifau30/temp"/>
	</target>
	
    <!-- ********************* -->
    <!-- US Data Model Section -->
    <!-- ********************* -->
	<target name="20-generate-US-DM" depends="init" description="Create all US POJOs (includes xPress) based on XSD Directories">
		<antcall target="generate-na-pojo">
			<param name="sifddversion" value="${sif.dm.version.nodot}"/>
		</antcall>
	</target>

	<target name="generate-na-pojo" depends="init" description="Generate POJOs using JAXB">
		<echo message="Generate Pojos for Locale NA, Data Model Version ${sifddversion} and Infrastructure 3.x"/>
		<delete dir="${output.base.dir}/sifus${sifddversion}/src" />
		<mkdir dir="${output.base.dir}/sifus${sifddversion}/src"/>
		<xjc destdir="${output.base.dir}/sifus${sifddversion}/src" 
             package="sif.dd.us${sifddversion}.model" 
             extension="true" 
             header="false" 
             source="2.0">
			<schema  dir="${input.base.dir}/XSD/sifus${sifddversion}" includes="Collections.xsd"/>
			<binding dir="${generator.dir}/config" includes="usCustom.xjb"/>
			<arg value="-npa"/>
		</xjc>
	</target>
	
    <!-- *************************** -->
    <!-- NA Unity Data Model Section -->
    <!-- *************************** -->
	<target name="30-generate-NAUnity-DM" depends="init" description="Generate POJOs using JAXB for SIF NA Unity">
		<antcall target="generate-unity-pojo">
			<param name="sifddversion" value="${sif.dm.version}"/>
		</antcall>
	</target>
	
  	<!-- 
       <arg value="-XautoNameResolution"/> fixes issue where two complex types only differ in 
       case such as gridLocationType and GridLocationType. This will generate two different classes
       called GridLocationType and GridLocationType2 (not ideal but it will build!).
  	-->
	<target name="generate-unity-pojo" depends="init" description="Generate POJOs using JAXB">
		<echo message="Generate Pojos for Locale NA, Unity Data Model Version ${sifddversion} and Infrastructure 3.x"/>
		<delete dir="${output.base.dir}/sifunity${sifddversion}/src" />
		<mkdir dir="${output.base.dir}/sifunity${sifddversion}/src"/>
		<mkdir dir="${input.base.dir}/XSD/sifna4x/temp"/>
		<copy file="${input.base.dir}/XSD/sifna4x/unity${sifddversion}/${sifunity.dd.file.name}" tofile="${input.base.dir}/XSD/sifna4x/temp/${sifunity.dd.file.name}"/>
		<xjc destdir="${output.base.dir}/sifunity${sifddversion}/src" 
             package="sif.dd.unity.model" 
             extension="true" 
             header="false" 
             source="2.0">
			<schema  dir="${input.base.dir}/XSD/sifna4x/temp" includes="*.xsd"/>
			<binding dir="${generator.dir}/config" includes="unityCustom.xjb"/>
			<arg value="-npa"/>
			<arg value="-XautoNameResolution"/>
		</xjc>
		<delete dir="${input.base.dir}/XSD/sifna4x/temp"/>
	</target>

	<!-- ********************************* -->
	<!-- JAR Targets for Data Dictionaries -->
	<!-- ********************************* -->

    <!-- ********************* -->
    <!-- AU Data Model Section -->
    <!-- ********************* -->
	<target name="15-jar-AU-DM" depends="compile-dd" description="Create jar file for SIF AU">
		<antcall target="jar-dd">
			<param name="locale" value="${sif.local}"/>
			<param name="sifddversion" value="${sif.dm.version}"/>
			<param name="srcDir" value="au30"/>
		</antcall>
	</target>

    <!-- ********************* -->
    <!-- NA Data Model Section -->
    <!-- ********************* -->
	<target name="25-jar-US-DM" depends="compile-dd" description="Create jar file for SIF NA">
		<antcall target="jar-dd">
			<param name="locale" value="${sif.local}"/>
			<param name="sifddversion" value="${sif.dm.version}"/>
			<param name="srcDir" value="us${sif.dm.version.nodot}"/>
		</antcall>
	</target>

    <!-- ***************************** -->
    <!-- NA Data Model Section - Unity -->
    <!-- ***************************** -->
	<target name="35-jar-NAUnity-DM" depends="compile-dd" description="Create jar file for SIF NA - Unity">
		<antcall target="jar-dd">
			<param name="locale" value="unity"/>
			<param name="sifddversion" value="${sif.dm.version}"/>
			<param name="srcDir" value="unity"/>
		</antcall>
	</target>

	<!-- ***************************** -->
	<!-- Compile All Data Dictionaries -->
	<!-- ***************************** -->
	<target name="compile-dd" depends="init">
		<echo message="Compile: Compile Data dictionary"/>
		<echo message="Ant uses Java/JVM version: ${ant.java.version}"/> 
		<echo message="Detailed Java/JVM version: ${java.version}"/> 
		<javac destdir="${class.dir}" debug="on" verbose="false">
			<!-- Ensure project jars are first. -->
			<compilerarg value="-Xbootclasspath/p:${toString:classpath}"/>
			<src path="${project.basedir}/sif3Datamodel/src" />
		</javac>
	</target>
	
	<!-- ****************** -->
    <!-- Generic JAR Target -->
    <!-- ****************** -->
	<target name="jar-dd">
		<echo message="Create Jar: sifDataModel_${locale}${sifddversion}.jar from source ${srcDir}" />
		<jar destfile="${dist.dir}/sifDataModel_${locale}${sifddversion}.jar">
	 	   <fileset dir="${class.dir}" includes="**/sif/dd/${srcDir}/**" excludes="**/readme.txt" />
		</jar>
	</target>

</project>
